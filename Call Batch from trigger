global class UpdateAccount implements Database.Batchable<sObject>, Database.AllowsCallouts {
//map of userid - user
Map<Id,Id> ownerMap = new Map<Id,Id>();

List<account> accountList =new List<account>();

//Constructor initialization
global UpdateAccount(Map<Id, Id> accounts) {

ownerMap = accounts;

  system.debug(ownerMap+'ccccccccccccccccccccccc'+accounts);

}

//Quuery method.
global Database.QueryLocator start(Database.BatchableContext BC) {
system.debug(ownerMap+'ssssssssssssssssssss'+ownerMap.keySet());
return DataBase.getQueryLocator([SELECT Id,NAME,AccountNumber,AccountSource,Site,Email__c FROM account WHERE id IN : ownerMap.keySet()]);
}

//Execute Method.
global void execute(Database.BatchableContext BC,List<Account> scope) {
 accwrapper12 acw;
system.debug(ownerMap+'eeeeeeeeeeeeeeeeeeeeeeee'+scope);

for(Account ac:scope){
   String value = 'Name='+ac.NAME+'&AccNumber='+ac.AccountNumber+'&Source='+ac.AccountSource+'&Site='+ac.Site+'&Email='+ac.email__c;
   HttpRequest req = new HttpRequest();
    HttpResponse res = new HttpResponse();
    Http http = new Http();
    req.setEndpoint('http://wavesign.comuv.com/store/?'+value);
    req.setMethod('GET');
    res = http.send(req);
    acw = new accwrapper12();
    system.debug('>>>>>>>>>>>>>>>>>>>>>>>>>'+res.getbody());
    if(res.getstatusCode() == 200 && res.getbody() != null)
    acw = (accwrapper12)json.deserialize(res.getbody(),accwrapper12.class);
    Account acc=new account();
    acc.id= ac.id;
    acc.Is_Synced_With_My_Sql__c = acw.error == '0'? True:False ;
    acc.Last_Synced_Date_Time__c = acw.Timex != null ? datetime.valueof(acw.Timex):null;
    acc.Result__C  = String.valueof(acw.result);
    accountList.add(acc);
  }
  
  update accountList;
}

//Finish method to execute at last.
global void finish(Database.BatchableContext BC) {

}
}
